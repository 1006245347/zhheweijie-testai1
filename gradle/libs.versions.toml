[versions]
agp = "8.5.2"
kotlin = "2.1.0"
ksp = "2.1.0-1.0.29"
compose-compiler = "1.5.4"
java = "17"
compose = "1.8.2"
kotlinxDatetime = "0.6.2"
compose-material3 = "1.3.1"
activityCompose = "1.9.2"
#这里有个大坑，compose的版本影响对应的渲染引擎版本，如果引入第三方UI框架版本差别太大会导致编译报错
compose-plugin = "1.8.2"
androidAppCompatVersion = "1.7.0"
sqlDelight = "2.0.2"
buildkonfigGradlePlugin = "0.15.1"
koin = "4.0.0"
mokoMvvmVersion = "0.16.1"
androidLifecycleVersion = "2.2.0"
stately = "2.0.6"
ktor = "3.2.3"
uuid = "0.8.4"
settings = "1.3.0"
mokopermission = "0.19.1"
perference = "1.2.0"
permissionX = "1.8.0"
coil3 = "3.1.0"
windowSize = "0.5.0"
sheet = "0.1.2"
pagingCommonVersion = "3.3.0-alpha02-0.5.1"
precompose = "1.7.0-alpha01" #预发布
okio = "3.9.0"
bugly = "4.1.9"
file = "0.11.0"
coroutines = "1.10.1"
coreSplashscreen = "1.0.1"
datastorePreferences = "1.1.1"
lifecycleRuntimeKtx = "2.7.0"
coreKtx = "1.15.0"
jna = "5.15.0"
toast4j = "0.2.0"
kotlinxSerializationJson = "1.7.3"
desugar_jdk_libs = "2.1.3"
accompanist-systemUIController = "0.36.0"
androidx-lifecycle = "2.8.4"
androidx-navigation = "2.8.0-alpha10"
napier = "2.7.1"
kermit="2.0.8"
richtext = "1.0.0-alpha02"
richedit = "1.0.0-rc13"
reveal = "3.2.0"
capture = "0.3.0"
ktoken = "0.3.0"
openai-client = "4.0.1"
#webview = "1.9.40"
#kotlinx-browser = "0.3"
peeboo = "0.5.2"
camerax = "1.3.2"
accompanist = "0.34.0"
com4j = "2.3.0"
compottie = "2.0.0"
langchain4j = "1.0.1-beta6"
koog = "0.4.1"
kembeding = "0.1.0"
objectbox = "4.3.1"


[libraries]
#UI框架相关
buildkonfig-gradle-plugin = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfigGradlePlugin" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-core = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "coroutines" }
kotlinX-serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerializationJson" }
#kotlinx-browser = { module = "org.jetbrains.kotlinx:kotlinx-browser", version.ref = "kotlinx-browser" }

uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
windowSize = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "windowSize" }
bottomSheet = { module = "com.github.skydoves:flexible-bottomsheet-material3", version.ref = "sheet" }
paging-compose = { module = "app.cash.paging:paging-compose-common", version.ref = "pagingCommonVersion" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
toast4j = { module = "de.mobanisto:toast4j", version.ref = "toast4j" }
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
jna-platform = { module = "net.java.dev.jna:jna-platform", version.ref = "jna" }
com4j = { module = "net.java.dev.com4j:com4j", version.ref = "com4j" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
#androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
accompanist-systemUIController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist-systemUIController" }
#不维护了，后续会废弃掉
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kermit ={ module ="co.touchlab:kermit",version.ref="kermit"}
stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
#https://github.com/KevinnZou/compose-webview-multiplatform
#compose-webviews = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "webview" }

#没有iOS的富文本处理
richtext-core = { module = "com.halilibo.compose-richtext:richtext-ui", version.ref = "richtext" }
richtext-mark = { module = "com.halilibo.compose-richtext:richtext-commonmark", version.ref = "richtext" }
richtext-markdown = { module = "com.halilibo.compose-richtext:richtext-markdown", version.ref = "richtext" }
richtext-material = { module = "com.halilibo.compose-richtext:richtext-ui-material", version.ref = "richtext" }
richtext-material3 = { module = "com.halilibo.compose-richtext:richtext-ui-material3", version.ref = "richtext" }
rich-editor = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "richedit" }

reveal = { module = "com.svenjacobs.reveal:reveal-core", version.ref = "reveal" }
#capture-shot = { module = "ir.mahozad.multiplatform:comshot", version.ref = "capture" }

#Android特有
androidx-perference = { module = "androidx.preference:preference-ktx", version.ref = "perference" }
androidx-lifecycle = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
lifecycle-extension = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "androidLifecycleVersion" }
android-bugly = { module = "com.tencent.bugly:crashreport", version.ref = "bugly" }
permissionX-android = { module = "com.guolindev.permissionx:permissionx", version.ref = "permissionX" }

#数据处理
file-picker = { module = "io.github.vinceglb:filekit-core", version.ref = "file" }
file-dialog = { module = "io.github.vinceglb:filekit-dialogs", version.ref = "file" }
file-dialog-compose = { module = "io.github.vinceglb:filekit-dialogs-compose", version.ref = "file" }
file-coil = { module = "io.github.vinceglb:filekit-coil", version.ref = "file" }
okio-core = { module = "com.squareup.okio:okio", version.ref = "okio" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
multiplatform-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
multiplatform-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
multiplatform-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "settings" }
multiplatform-make = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "settings" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

#依赖注入
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }

#lottie动画 https://github.com/alexzhirkevich/compottie
compottie = { module = "io.github.alexzhirkevich:compottie", version.ref = "compottie" }
compottie-dot = { module = "io.github.alexzhirkevich:compottie-dot", version.ref = "compottie" }
compottie-network = { module = "io.github.alexzhirkevich:compottie-network", version.ref = "compottie" }
compottie-resources = { module = "io.github.alexzhirkevich:compottie-resources", version.ref = "compottie" }

#权限申请，兼容Android
mokopermission = { module = "dev.icerock.moko:permissions", version.ref = "mokopermission" }
mokopermission-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "mokopermission" }
mokopermission-camera = { module = "dev.icerock.moko:permissions-camera", version.ref = "mokopermission" }
mokopermission-storage = { module = "dev.icerock.moko:permissions-storage", version.ref = "mokopermission" }
mokopermission-gallery = { module = "dev.icerock.moko:permissions-gallery", version.ref = "mokopermission" }
mokopermission-notifications = { module = "dev.icerock.moko:permissions-notifications", version.ref = "mokopermission" }
mokoMvvmCompose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "mokoMvvmVersion" }
precompose-navigator = { module = "moe.tlaster:precompose", version.ref = "precompose" }
precompose-koin = { module = "moe.tlaster:precompose-koin", version.ref = "precompose" }
precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "precompose" }
mokoMvvmCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "mokoMvvmVersion" }

#数据库
android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqldelight-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
#sqlite-web = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqlDelight" }
#多平台数据库
objects-javax = { module = "io.objectbox:objectbox-java", version.ref = "objectbox" }
objects-browser = { module = "io.objectbox:objectbox-android-objectbrowser", version.ref = "objectbox" }
objects-android = { module = "io.objectbox:objectbox-android", version.ref = "objectbox" }
objects-plugin = { module = "io.objectbox:objectbox-gradle-plugin", version.ref = "objectbox" }
objects-window = { module = "io.objectbox:objectbox-windows", version.ref = "objectbox" }
objects-linux = { module = "io.objectbox:objectbox-linux", version.ref = "objectbox" }
objects-mac = { module = "io.objectbox:objectbox-macos", version.ref = "objectbox" }
objects-kotlin={ module ="io.objectbox:objectbox-kotlin",version.ref="objectbox"}
objects-processor = { module = "io.objectbox:objectbox-processor", version.ref = "objectbox" }

#ktor 3.0网络连接
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
#ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
#ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
#ktor engines
#ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
#ktor-client-jetty = { module = "io.ktor:ktor-client-jetty", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktoken = { group = "com.aallam.ktoken", name = "ktoken", version.ref = "ktoken" }
openai-client = { module = "com.aallam.openai:openai-client", version.ref = "openai-client" }

#https://coil-kt.github.io/coil/getting_started/
coil3-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3" }
coil3-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil3" }
coil3-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil3" }
#video/gif只有Android版
#coil3-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil3" }
coil3-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil3" }

#相机、图册
#peekaboo-ui={ module ="io.github.onseok:peekaboo-ui",version.ref="peekaboo"}
#peekaboo-picker={ module ="io.github.onseok:peekaboo-image-picker",version.ref="peekaboo"}
camera-camera2 = { group = "androidx.camera", name = "camera-camera2", version.ref = "camerax" }
camera-lifecycle = { group = "androidx.camera", name = "camera-lifecycle", version.ref = "camerax" }
camera-view = { group = "androidx.camera", name = "camera-view", version.ref = "camerax" }
accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanist" }

#langchain4j 快速调用大模型和外部工具   InMemoryEmbeddingStoreExample.java
#https://docs.langchain4j.dev/integrations/web-search-engines/searchapi
langchain-search = { group = "dev.langchain4j", name = "langchain4j-web-search-engine-searchapi", version.ref = "langchain4j" }
langchain-rag = { group = "dev.langchain4j", name = "langchain4j-easy-rag", version.ref = "langchain4j" }
langchain-document = { group = "dev.langchain4j", name = "langchain4j-document-parser-apache-tika", version.ref = "langchain4j" }
langchain-embeddings = { group = "dev.langchain4j", name = "langchain4j-embeddings-all-minilm-l6-v2", version.ref = "langchain4j" }
langchain-execution = { group = "dev.langchain4j", name = "langchain4j-code-execution-engine-judge0", version.ref = "langchain4j" }

#使用本地模型进行AI服务
#langchain-local-ai = { group = "dev.langchain4j", name = "langchain4j-local-ai", version.ref = "langchain4j" }
koog-agents = { module = "ai.koog:koog-agents", version.ref = "koog" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfigGradlePlugin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinKapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

